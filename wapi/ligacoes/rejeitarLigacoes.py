import requests
import json


class WAPICallReject:
    def __init__(self, base_url="https://api.w-api.app/v1", bearer_token="Q8EOH07SJkXhg4iT6Qmhz1BJdLl8nL9WF"):
        """
        Inicializa a classe com a URL base da API e o token de autoriza√ß√£o

        Args:
            base_url (str): URL base da API W-API
            bearer_token (str): Token de autoriza√ß√£o Bearer
        """
        self.base_url = base_url
        self.headers = {
            "Content-Type": "application/json",
            "Authorization": f"Bearer {bearer_token}"
        }

    def enable_call_reject(self, instance_id, enable=True):
        """
        Habilita ou desabilita a rejei√ß√£o autom√°tica de chamadas

        Args:
            instance_id (str): ID da inst√¢ncia
            enable (bool): True para habilitar, False para desabilitar

        Returns:
            dict: Resposta da API
        """
        url = f"{self.base_url}/instance/update-call-reject-auto"
        params = {"instanceId": instance_id}
        data = {"value": enable}

        try:
            response = requests.put(
                url,
                headers=self.headers,
                params=params,
                json=data
            )
            response.raise_for_status()
            return {
                "success": True,
                "status_code": response.status_code,
                "data": response.json() if response.content else {}
            }
        except requests.exceptions.RequestException as e:
            return {
                "success": False,
                "error": str(e),
                "status_code": getattr(e.response, 'status_code', None)
            }

    def set_call_reject_message(self, instance_id, message):
        """
        Define a mensagem que ser√° enviada ap√≥s rejeitar uma chamada

        Args:
            instance_id (str): ID da inst√¢ncia
            message (str): Mensagem personalizada

        Returns:
            dict: Resposta da API
        """
        url = f"{self.base_url}/instance/update-call-reject-message"
        params = {"instanceId": instance_id}
        data = {"value": message}

        try:
            response = requests.put(
                url,
                headers=self.headers,
                params=params,
                json=data
            )
            response.raise_for_status()
            return {
                "success": True,
                "status_code": response.status_code,
                "data": response.json() if response.content else {}
            }
        except requests.exceptions.RequestException as e:
            return {
                "success": False,
                "error": str(e),
                "status_code": getattr(e.response, 'status_code', None)
            }


# Exemplo de uso
def main():
    # Configura√ß√µes
    BEARER_TOKEN = "Q8EOH07SJkXhg4iT6Qmhz1BJdLl8nL9WF"  # Substitua pelo seu token
    INSTANCE_ID = "Q8EOH07SJkXhg4iT6Qmhz1BJdLl8nL9WF"  # Substitua pelo ID da sua inst√¢ncia

    # Inicializar a classe
    api = WAPICallReject(bearer_token=BEARER_TOKEN)

    print("üîß Configurando rejei√ß√£o autom√°tica de chamadas...")
    print("-" * 50)

    # 1. Habilitar rejei√ß√£o autom√°tica de chamadas
    print("1Ô∏è‚É£ Habilitando rejei√ß√£o autom√°tica...")
    result = api.enable_call_reject(INSTANCE_ID, enable=True)

    if result["success"]:
        print("‚úÖ Rejei√ß√£o autom√°tica habilitada com sucesso!")
        print(f"Status Code: {result['status_code']}")
    else:
        print("‚ùå Erro ao habilitar rejei√ß√£o autom√°tica:")
        print(f"Erro: {result['error']}")
        return

    print()

    # 2. Definir mensagem personalizada
    print("2Ô∏è‚É£ Configurando mensagem personalizada...")
    custom_message = """
üö´ Chamada automaticamente rejeitada

Ol√°! No momento n√£o posso atender chamadas de voz ou v√≠deo.
Por favor, envie uma mensagem de texto que responderei assim que poss√≠vel.

Obrigado pela compreens√£o! üòä
    """.strip()

    result = api.set_call_reject_message(INSTANCE_ID, custom_message)

    if result["success"]:
        print("‚úÖ Mensagem personalizada configurada com sucesso!")
        print(f"Status Code: {result['status_code']}")
        print(f"Mensagem definida: {custom_message}")
    else:
        print("‚ùå Erro ao configurar mensagem:")
        print(f"Erro: {result['error']}")

    print()
    print("üéâ Configura√ß√£o conclu√≠da!")


# Exemplo adicional: Desabilitar rejei√ß√£o autom√°tica
def disable_call_reject_example():
    BEARER_TOKEN = "Q8EOH07SJkXhg4iT6Qmhz1BJdLl8nL9WF"
    INSTANCE_ID = "3B6XIW-ZTS923-GEAY6V"

    api = WAPICallReject(bearer_token=BEARER_TOKEN)

    print("üîÑ Desabilitando rejei√ß√£o autom√°tica de chamadas...")
    result = api.enable_call_reject(INSTANCE_ID, enable=False)

    if result["success"]:
        print("‚úÖ Rejei√ß√£o autom√°tica desabilitada!")
    else:
        print(f"‚ùå Erro: {result['error']}")


# Executar exemplo
if __name__ == "__main__":
    print("ü§ñ Configura√ß√£o de Rejei√ß√£o de Chamadas")
    print("=" * 50)

    # Verificar se requests est√° instalado
    try:
        import requests
    except ImportError:
        print("‚ùå Biblioteca 'requests' n√£o encontrada!")
        print("üí° Execute: pip install requests")
        exit(1)

    # Executar configura√ß√£o principal
    main()

    print("\n" + "=" * 50)
    print("üìù Lembre-se de:")
    print("‚Ä¢ Substituir SEU_TOKEN_AQUI pelo seu token Bearer")
    print("‚Ä¢ Substituir SUA_INSTANCIA_AQUI pelo ID da sua inst√¢ncia")
    print("‚Ä¢ Personalizar a mensagem conforme necess√°rio")
    print("‚Ä¢ Testar com uma chamada para verificar o funcionamento")