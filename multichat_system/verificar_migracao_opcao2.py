#!/usr/bin/env python3
"""
Script para verificar o que aconteceu quando foi escolhida a op√ß√£o 2 na migra√ß√£o
"""

import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'multichat.settings')
django.setup()

from core.models import Cliente, WhatsappInstance, Chat, Mensagem
from webhook.models import WebhookEvent
from django.db import connection

def verificar_campos_null():
    """Verifica campos que podem ter ficado NULL ap√≥s a migra√ß√£o"""
    print("üîç VERIFICANDO CAMPOS NULL AP√ìS MIGRA√á√ÉO")
    print("=" * 60)
    
    # Verificar WhatsappInstance
    print("\nüì± WHATSAPP INSTANCES:")
    instancias = WhatsappInstance.objects.all()
    for instancia in instancias:
        print(f"   ID: {instancia.id}")
        print(f"   Instance ID: {instancia.instance_id}")
        print(f"   Cliente: {instancia.cliente}")
        print(f"   Status: {instancia.status}")
        print(f"   Cliente √© NULL: {instancia.cliente is None}")
        print()
    
    # Verificar Chats
    print("\nüí¨ CHATS:")
    chats = Chat.objects.all()
    for chat in chats:
        print(f"   ID: {chat.id}")
        print(f"   Chat ID: {chat.chat_id}")
        print(f"   Cliente: {chat.cliente}")
        print(f"   Status: {chat.status}")
        print(f"   Canal: {chat.canal}")
        print(f"   Cliente √© NULL: {chat.cliente is None}")
        print()
    
    # Verificar Mensagens
    print("\nüíå MENSAGENS:")
    mensagens = Mensagem.objects.all()
    for msg in mensagens:
        print(f"   ID: {msg.id}")
        print(f"   Chat: {msg.chat}")
        print(f"   Remetente: {msg.remetente}")
        print(f"   Conte√∫do: {msg.conteudo[:50]}...")
        print(f"   Chat √© NULL: {msg.chat is None}")
        print()

def verificar_estrutura_tabela():
    """Verifica a estrutura atual das tabelas"""
    print("\nüèóÔ∏è  ESTRUTURA DAS TABELAS")
    print("=" * 60)
    
    with connection.cursor() as cursor:
        # Verificar tabela core_chat
        cursor.execute("PRAGMA table_info(core_chat)")
        columns = cursor.fetchall()
        print("\nüìã Tabela core_chat:")
        for col in columns:
            print(f"   {col[1]} ({col[2]}) - NULL: {col[3]} - Default: {col[4]}")
        
        # Verificar tabela core_whatsappinstance
        cursor.execute("PRAGMA table_info(core_whatsappinstance)")
        columns = cursor.fetchall()
        print("\nüì± Tabela core_whatsappinstance:")
        for col in columns:
            print(f"   {col[1]} ({col[2]}) - NULL: {col[3]} - Default: {col[4]}")

def corrigir_campos_null():
    """Corrige campos NULL que podem ter sido criados"""
    print("\nüîß CORRIGINDO CAMPOS NULL")
    print("=" * 60)
    
    # Buscar cliente ELIZEU
    try:
        cliente_elizeu = Cliente.objects.get(nome__icontains='ELIZEU BATILIERE DOS SANTOS')
        print(f"‚úÖ Cliente encontrado: {cliente_elizeu.nome}")
    except Cliente.DoesNotExist:
        print("‚ùå Cliente ELIZEU n√£o encontrado!")
        return
    
    # Corrigir WhatsappInstances sem cliente
    instancias_sem_cliente = WhatsappInstance.objects.filter(cliente__isnull=True)
    print(f"üì± Inst√¢ncias sem cliente: {instancias_sem_cliente.count()}")
    
    for instancia in instancias_sem_cliente:
        instancia.cliente = cliente_elizeu
        instancia.save()
        print(f"‚úÖ Inst√¢ncia {instancia.instance_id} associada ao cliente")
    
    # Corrigir Chats sem cliente
    chats_sem_cliente = Chat.objects.filter(cliente__isnull=True)
    print(f"üí¨ Chats sem cliente: {chats_sem_cliente.count()}")
    
    for chat in chats_sem_cliente:
        chat.cliente = cliente_elizeu
        chat.save()
        print(f"‚úÖ Chat {chat.chat_id} associado ao cliente")

if __name__ == "__main__":
    print("üîç VERIFICA√á√ÉO DA MIGRA√á√ÉO - OP√á√ÉO 2")
    print("=" * 80)
    
    # Verificar estrutura das tabelas
    verificar_estrutura_tabela()
    
    # Verificar campos NULL
    verificar_campos_null()
    
    # Corrigir campos NULL se necess√°rio
    corrigir_campos_null()
    
    print("\n" + "=" * 80)
    print("üéØ CONCLUS√ÉO:")
    print("A op√ß√£o 2 na migra√ß√£o significa 'Ignore for now' - campos NULL")
    print("foram mantidos como NULL. Se houver problemas, eles foram corrigidos acima.") 