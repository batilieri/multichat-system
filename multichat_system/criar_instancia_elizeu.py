#!/usr/bin/env python3
"""
Script para criar inst√¢ncia do WhatsApp associada ao cliente ELIZEU BATILIERE DOS SANTOS
Usando as credenciais dos exemplos da WAPI
"""

import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'multichat.settings')
django.setup()

from core.models import Cliente, WhatsappInstance
from django.utils import timezone

def criar_instancia_whatsapp():
    """Cria inst√¢ncia do WhatsApp para o cliente ELIZEU BATILIERE DOS SANTOS"""
    
    # Buscar o cliente
    try:
        cliente = Cliente.objects.get(nome__icontains='ELIZEU BATILIERE DOS SANTOS')
        print(f"‚úÖ Cliente encontrado: {cliente.nome}")
    except Cliente.DoesNotExist:
        print("‚ùå Cliente 'ELIZEU BATILIERE DOS SANTOS' n√£o encontrado!")
        return False
    
    # Credenciais da WAPI dos exemplos
    instance_id = "3B6XIW-ZTS923-GEAY6V"
    token = "Q8EOH07SJkXhg4iT6Qmhz1BJdLl8nL9WF"
    
    # Verificar se j√° existe uma inst√¢ncia com esse ID
    try:
        instancia_existente = WhatsappInstance.objects.get(instance_id=instance_id)
        print(f"‚ö†Ô∏è  Inst√¢ncia j√° existe: {instancia_existente}")
        
        # Atualizar para associar ao cliente correto
        if instancia_existente.cliente != cliente:
            instancia_existente.cliente = cliente
            instancia_existente.save()
            print(f"‚úÖ Inst√¢ncia atualizada para o cliente: {cliente.nome}")
        else:
            print(f"‚úÖ Inst√¢ncia j√° est√° associada ao cliente correto")
        
        return instancia_existente
        
    except WhatsappInstance.DoesNotExist:
        # Criar nova inst√¢ncia
        instancia = WhatsappInstance.objects.create(
            instance_id=instance_id,
            token=token,
            cliente=cliente,
            status='disconnected',  # Ser√° atualizado quando conectar
            created_at=timezone.now()
        )
        print(f"‚úÖ Nova inst√¢ncia criada: {instancia}")
        return instancia

def atualizar_cliente_wapi():
    """Atualiza o cliente com as informa√ß√µes da WAPI"""
    
    try:
        cliente = Cliente.objects.get(nome__icontains='ELIZEU BATILIERE DOS SANTOS')
        
        # Atualizar campos da WAPI no cliente
        cliente.wapi_instance_id = "3B6XIW-ZTS923-GEAY6V"
        cliente.wapi_token = "Q8EOH07SJkXhg4iT6Qmhz1BJdLl8nL9WF"
        cliente.save()
        
        print(f"‚úÖ Cliente atualizado com credenciais WAPI: {cliente.nome}")
        return True
        
    except Cliente.DoesNotExist:
        print("‚ùå Cliente n√£o encontrado!")
        return False

if __name__ == "__main__":
    print("üöÄ Configurando inst√¢ncia do WhatsApp para ELIZEU BATILIERE DOS SANTOS...")
    print("=" * 60)
    
    # Atualizar cliente com credenciais WAPI
    if atualizar_cliente_wapi():
        # Criar inst√¢ncia do WhatsApp
        instancia = criar_instancia_whatsapp()
        
        if instancia:
            print("\n‚úÖ Configura√ß√£o conclu√≠da!")
            print(f"üì± Inst√¢ncia: {instancia.instance_id}")
            print(f"üë§ Cliente: {instancia.cliente.nome}")
            print(f"üîë Token: {instancia.token[:10]}...")
            print(f"üìä Status: {instancia.status}")
            
            print("\nüéØ Pr√≥ximos passos:")
            print("1. Ativar o webhook para receber mensagens")
            print("2. Conectar a inst√¢ncia do WhatsApp")
            print("3. Testar recebimento de mensagens no frontend")
        else:
            print("‚ùå Erro ao criar inst√¢ncia!")
    else:
        print("‚ùå Erro ao configurar cliente!") 