# Generated by Django 4.2.23 on 2025-07-31 15:36

import re
from django.db import migrations


def normalize_chat_id(chat_id):
    """
    Normaliza o chat_id para garantir que seja um n√∫mero de telefone v√°lido
    Remove sufixos como @lid, @c.us, etc e extrai apenas o n√∫mero
    """
    if not chat_id:
        return None
    
    # Remover sufixos comuns do WhatsApp
    chat_id = re.sub(r'@[^.]+\.us$', '', chat_id)  # Remove @c.us, @lid, etc
    chat_id = re.sub(r'@[^.]+$', '', chat_id)      # Remove outros sufixos
    
    # Extrair apenas n√∫meros
    numbers_only = re.sub(r'[^\d]', '', chat_id)
    
    # Validar se √© um n√∫mero de telefone v√°lido (m√≠nimo 10 d√≠gitos)
    if len(numbers_only) >= 10:
        return numbers_only
    
    return chat_id  # Retornar original se n√£o conseguir normalizar


def corrigir_chat_ids(apps, schema_editor):
    """
    Corrige os IDs dos chats que est√£o incorretos
    """
    Chat = apps.get_model('core', 'Chat')
    
    # Buscar chats com IDs incorretos (que cont√™m @)
    chats_incorretos = Chat.objects.filter(chat_id__contains='@')
    
    print(f"üîß Migra√ß√£o: Encontrados {chats_incorretos.count()} chats com IDs incorretos")
    
    corrigidos = 0
    for chat in chats_incorretos:
        try:
            # Normalizar o ID
            novo_id = normalize_chat_id(chat.chat_id)
            
            if novo_id and novo_id != chat.chat_id:
                # Verificar se j√° existe um chat com o novo ID
                chat_existente = Chat.objects.filter(chat_id=novo_id).first()
                
                if chat_existente:
                    print(f"‚ö†Ô∏è Migra√ß√£o: Chat com ID {novo_id} j√° existe. Removendo duplicado...")
                    # Deletar chat incorreto (manter o correto)
                    chat.delete()
                else:
                    # Atualizar o ID do chat
                    chat.chat_id = novo_id
                    chat.save()
                    print(f"‚úÖ Migra√ß√£o: Chat ID corrigido: {chat.chat_id} -> {novo_id}")
                
                corrigidos += 1
            else:
                print(f"‚ö†Ô∏è Migra√ß√£o: Chat ID n√£o p√¥de ser normalizado: {chat.chat_id}")
                
        except Exception as e:
            print(f"‚ùå Migra√ß√£o: Erro ao corrigir chat {chat.chat_id}: {e}")
    
    print(f"üìä Migra√ß√£o: {corrigidos} chats corrigidos")


def reverter_correcao(apps, schema_editor):
    """
    Fun√ß√£o de revers√£o (n√£o faz nada, pois n√£o √© poss√≠vel reverter a corre√ß√£o)
    """
    print("‚ö†Ô∏è Migra√ß√£o: Revers√£o n√£o implementada - corre√ß√£o de IDs √© irrevers√≠vel")


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0012_mensagem_reacoes'),
    ]

    operations = [
        migrations.RunPython(corrigir_chat_ids, reverter_correcao),
    ]
