#!/usr/bin/env python3
"""
Script para testar a conex√£o com a API do Django
"""
import requests
import json

def test_api_connection():
    """Testa a conex√£o com a API do Django"""
    print("üîç TESTE DE CONEX√ÉO COM API DJANGO")
    print("=" * 50)
    
    base_url = "http://localhost:8000"
    
    # Teste 1: Verificar se o servidor est√° rodando
    print("1Ô∏è‚É£ Testando se o servidor est√° rodando...")
    try:
        response = requests.get(f"{base_url}/", timeout=5)
        print(f"‚úÖ Servidor respondendo (Status: {response.status_code})")
    except requests.exceptions.ConnectionError:
        print("‚ùå Servidor n√£o est√° rodando na porta 8000")
        print("üí° Para iniciar o servidor Django:")
        print("   cd multichat_system")
        print("   python manage.py runserver")
        return
    except Exception as e:
        print(f"‚ùå Erro ao conectar: {e}")
        return
    
    # Teste 2: Verificar endpoint de inst√¢ncias sem autentica√ß√£o
    print("\n2Ô∏è‚É£ Testando endpoint de inst√¢ncias (sem auth)...")
    try:
        response = requests.get(f"{base_url}/api/whatsapp-instances/", timeout=5)
        print(f"Status: {response.status_code}")
        if response.status_code == 401:
            print("‚úÖ Endpoint protegido (esperado)")
        else:
            print(f"‚ö†Ô∏è  Resposta inesperada: {response.text[:200]}")
    except Exception as e:
        print(f"‚ùå Erro: {e}")
    
    # Teste 3: Verificar endpoint de clientes sem autentica√ß√£o
    print("\n3Ô∏è‚É£ Testando endpoint de clientes (sem auth)...")
    try:
        response = requests.get(f"{base_url}/api/clientes/", timeout=5)
        print(f"Status: {response.status_code}")
        if response.status_code == 401:
            print("‚úÖ Endpoint protegido (esperado)")
        else:
            print(f"‚ö†Ô∏è  Resposta inesperada: {response.text[:200]}")
    except Exception as e:
        print(f"‚ùå Erro: {e}")
    
    # Teste 4: Verificar se h√° token de acesso v√°lido
    print("\n4Ô∏è‚É£ Verificando token de acesso...")
    try:
        # Tentar buscar token do localStorage (simulado)
        print("üí° Para testar com autentica√ß√£o, voc√™ precisa:")
        print("   1. Fazer login no frontend")
        print("   2. Copiar o token do localStorage")
        print("   3. Usar o token nas requisi√ß√µes")
    except Exception as e:
        print(f"‚ùå Erro: {e}")
    
    print("\nüìã RESUMO:")
    print("‚úÖ Servidor Django est√° rodando")
    print("‚úÖ Endpoints est√£o protegidos por autentica√ß√£o")
    print("üí° O erro no frontend pode ser:")
    print("   - Token de acesso expirado")
    print("   - Problema de CORS")
    print("   - Erro na autentica√ß√£o")

if __name__ == "__main__":
    test_api_connection() 